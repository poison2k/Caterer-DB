<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ansprechpartner" xml:space="preserve">
    <value>Ansprechpartner</value>
  </data>
  <data name="BenutzerBeschreibung" xml:space="preserve">
    <value>Nutzereintrag nicht vorhanden</value>
  </data>
  <data name="BenutzerCode" xml:space="preserve">
    <value>User not Exist</value>
  </data>
  <data name="BenutzerValidationMessage" xml:space="preserve">
    <value>Bitte geben Sie einen Benutzernamen ein</value>
  </data>
  <data name="DatenbankBeschreibung" xml:space="preserve">
    <value>Benutzer konnte nicht aus Datenbank gelesen werden</value>
  </data>
  <data name="DatenbankCode" xml:space="preserve">
    <value>Custom Error</value>
  </data>
  <data name="EMailVorhanden" xml:space="preserve">
    <value>E-Mail ist bereits registriert</value>
  </data>
  <data name="PasswortBeschreibung" xml:space="preserve">
    <value>E-Mail oder Passwort falsch</value>
  </data>
  <data name="PasswortCode" xml:space="preserve">
    <value>Falsche Passwort</value>
  </data>
  <data name="PasswortValidationMessage" xml:space="preserve">
    <value>Bitte geben Sie ein Passwort ein</value>
  </data>
  <data name="PasswortVergessen" xml:space="preserve">
    <value>Passwort vergessen?</value>
  </data>
  <data name="StartseiteText" xml:space="preserve">
    <value>Mit der Datenbank möchten wir Caterer und Schulen zusammenbringen und eine flächendeckende Versorgung der Schulen mit einer guten Schulverpflegung unterstützen. 
Daher freuen wir uns besonders, wenn Sie als Caterer für die Schulverpflegung Ihr Angebot darstellen, aktualisieren und bereit sind, dass wir Ihre Daten im Bedarfsfall an Schulen oder auch Schulträger weiterleiten dürfen. Ob Warmverpflegung oder Cook&amp;Chill, ob deutschlandweite oder regionale kleine Lieferkreise, für kleine und große Schüleranzahlen – anhand der integrierten Suchfunktion können die Mitarbeiterinnen der Vernetzungsstelle Schulverpflegung einen passenden Caterer ermitteln. 
Aber auch wenn Sie nicht möchten, dass wir Ihre Daten für Beratungszwecke weitergeben, ist eine Registrierung für Sie natürlich möglich. Schauen Sie sich dazu gerne unsere AGB´s und Datenschutzbestimmung an. 
Registrieren können sich alle Anbieter von Schulverpflegung, die Ihr Essen entweder den Schulen anliefern oder aber eine Mensa vor Ort betreiben und dieses Angebot weiteren Schulen unterbreiten möchten. Alle Verpflegungssysteme sind möglich. 
Die Registrierung und Nutzung der Datenbank ist für Sie kostenlos.
Zugriff und Einsicht auf und in Ihre Daten haben lediglich Sie selbst und die Mitarbeiterinnen der Vernetzungsstelle Schulverpflegung Niedersachsen. Die Verwaltung Ihrer Daten ist für Sie zu jedem Zeitpunkt transparent und Sie werden stets über Veränderungen Ihrer Daten informiert. Natürlich stehen wir Ihnen gerne für Fragen zu der Caterer-Datenbank und der Registrierung unter unseren Kontaktdaten zur Verfügung. 
Wir bedanken uns für Ihr Vertrauen und Interesse am Gelingen der Schulverpflegung in Niedersachsen. 
Das Team der Vernetzungsstelle Schulverpflegung Niedersachsen</value>
  </data>
  <data name="StartseiteTextÜberschrift" xml:space="preserve">
    <value>Herzlich Willkommen auf der Seite der Caterer-Datenbank der Vernetzungsstelle Schulverpflegung Niedersachsen</value>
  </data>
  <data name="UnbekannterBeschreibung" xml:space="preserve">
    <value>E-Mail oder Passwort falsch</value>
  </data>
  <data name="UnbekannterCode" xml:space="preserve">
    <value>UnknownError</value>
  </data>
  <data name="WillkommensText" xml:space="preserve">
    <value>Platzhalter</value>
  </data>
</root>