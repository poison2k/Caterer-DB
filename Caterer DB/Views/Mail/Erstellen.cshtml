@model Caterer_DB.Models.CreateMailViewModel
@{
    ViewBag.Title = "Erstellen";
}

<div class="container">
    <h4>SMTP-Mail erstellen</h4>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="row">
            <ul class="list-unstyled list-inline col-md-6" style="margin-left: -5px;">
                <li>
                    <button type="submit" id="btnMailSenden" name="MailSendenButton" value="MailSendenButton" class="btn btn-success"><i class="glyphicon glyphicon-save"></i> Mail senden</button>
                </li>
            </ul>
        </div>

        if (Model.FehlerListe.Count > 0)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-danger">
                        <div class="panel-heading">Fehler</div>
                        <div class="panel-body">
                            <ul>
                                @foreach (string fehler in Model.FehlerListe)
                                {
                                    <li>@fehler</li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="well">
            <div class="row">
                <h4>Serverinformationen</h4>
            </div>
            <div class="row">
                <div id="MailSMTPSeverName" class="form-group col-md-4">
                    @Html.LabelFor(model => model.SMTPSeverName, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.SMTPSeverName, new { @class = "form-control" })
                </div>
                <div id="MailPort" class="form-group col-md-4">
                    @Html.LabelFor(model => model.Port, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Port, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div id="MailSMTPSeverName" class="form-group col-md-4">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                </div>
                <div id="MailPort" class="form-group col-md-4">
                    @Html.LabelFor(model => model.Passwort, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Passwort, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="well">
            <div class="row">
                <div id="MailEmpfaenger" class="form-group col-md-4">
                    @Html.LabelFor(model => model.Empfaenger, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Empfaenger, new { @class = "form-control" })
                </div>
                <div id="MailAbsender" class="form-group col-md-4">
                    @Html.LabelFor(model => model.Absender, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Absender, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div id="MailBetreff" class="form-group col-md-12">
                    @Html.LabelFor(model => model.Betreff, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Betreff, new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div id="MailInhalt" class="form-group col-md-12">
                    @Html.LabelFor(model => model.Inhalt, new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Inhalt, 10, 250, new { @class = "form-control" })
                </div>
            </div>
        </div>
    }
</div>
