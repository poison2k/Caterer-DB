@using PagedList.Mvc
@using Caterer_DB.Models
@model ListViewModel<IndexBenutzerViewModel>
@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm())
{

    <br />
    <br />
    <br />
    <div class="row">
        <div id="MitarbeiterSeite" class="col-md-4 col-md-offset-4 text-center">
            <h1>Mitarbeiter</h1>
        </div>
    </div>
    <div style="margin-top: 15px"></div>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <ul class="list-unstyled list-inline col-md-12" style="margin-left: -5px;">
                        <li>
                            <a id="btnMarkierungenErstellen" href="@Url.Action("Create", "Benutzer")" na name="btnErstellen" type="submit" class="btn btn-success">
                                <i class="glyphicon glyphicon-plus"></i> Neuer Mitarbeiter
                            </a>
                        </li>
                    </ul>
                </div>
                <div style="margin-top: 15px"></div>
                <div class="row" id="BenutzerIndexPartial">

                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading"></div>
                            <table class="table table-striped">
                                <tr>
                                    <th>
                                        @if (ViewBag.Sortierrung == "Anrede")
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung = "Anrede_desc" })"> @Html.DisplayNameFor(model => model.FirstOrDefault().Anrede) <b class="caret"></b> </a>
                                        }
                                        else if (ViewBag.Sortierrung == "Anrede_desc")
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung  = "Anrede"})"> @Html.DisplayNameFor(model => model.FirstOrDefault().Anrede ) <b class="caret caret-reversed"></b> </a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung = "Anrede" })"> @Html.DisplayNameFor(model => model.FirstOrDefault().Anrede)  </a>
                                        }
                                    </th>
                                    <th>
                                        @if (ViewBag.Sortierrung == "Nachname")
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung = "Nachname_desc"})">@Html.DisplayNameFor(model => model.FirstOrDefault().Nachname) <b class="caret"></b> </a>
                                        }
                                        else if (ViewBag.Sortierrung == "Nachname_desc")
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung  = "Nachname"})"> @Html.DisplayNameFor(model => model.FirstOrDefault().Nachname) <b class="caret caret-reversed"></b> </a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung  = "Nachname"})"> @Html.DisplayNameFor(model => model.FirstOrDefault().Nachname)  </a>
                                        }
                                       
                                    </th>
                                    <th>
                                        @if (ViewBag.Sortierrung == "Vorname")
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung = "Vorname_desc"})">@Html.DisplayNameFor(model => model.FirstOrDefault().Vorname) <b class="caret"></b> </a>
                                        }
                                        else if (ViewBag.Sortierrung == "Vorname_desc")
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung  = "Vorname"})"> @Html.DisplayNameFor(model => model.FirstOrDefault().Vorname) <b class="caret caret-reversed"></b> </a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("Index", "Benutzer", new { Sortierrung  = "Vorname"})"> @Html.DisplayNameFor(model => model.FirstOrDefault().Vorname)  </a>
                                        }
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().Telefon)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.FirstOrDefault().FunktionAnsprechpartner)
                                    </th>

                                    <th></th>
                                </tr>

                                @foreach (var item in Model.Entitäten)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Anrede)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Nachname)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Vorname)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Telefon)</td>    
                                        <td>@Html.DisplayFor(modelItem => item.FunktionAnsprechpartner)</td>                                   

                                        <td align="center">
                                            <a class="btn btn-default" href="@Url.Action("Details", "Benutzer", new {id = item.BenutzerId})" title="Details"><i class="glyphicon glyphicon-search"></i></a>
                                            <a class="btn btn-default" href="@Url.Action("Edit", "Benutzer", new {id = item.BenutzerId})" title="Bearbeiten"><i class="glyphicon glyphicon-pencil"></i></a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>

                        @if (Model.TotalItemCount > Model.PageSize)
                        {
                            var seitenAnzahl = Model.TotalItemCount / Model.PageSize + 1;

                            <input id="seitenAnzahl" type="hidden" value="@seitenAnzahl" />
                            <div controller="/Benutzer/GetListPartial/" target="BenutzerIndexPartial">
                                Seite @Model.PageNumber von @(seitenAnzahl)
                                @Html.PagedListPager(Model, aktuelleSeite => Url.Action("Index", new { aktuelleSeite, Model.PageSize,Sortierrung = ViewBag.Sortierrung }))
                            </div>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />


}