@using Caterer_DB.Models
@model RegisterBenutzerViewModel

@{
    ViewBag.Title = "Registrierung";
}

<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-4 text-center">
        <h3>Registrierung</h3>
    </div>
        <div class="col-md-4"></div>  
</div>
<br />
<br />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            
            <div class="form-group">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", placeholder = "E-Mail" } })
                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Passwort, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Passwort, new { htmlAttributes = new { @class = "form-control", placeholder = "Passwort" } })
                    @Html.ValidationMessageFor(model => model.Passwort, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PasswortVerification, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswortVerification, new { htmlAttributes = new { @class = "form-control", placeholder = "Passwort wiederholen" } })
                    @Html.ValidationMessageFor(model => model.PasswortVerification, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Firmenname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firmenname, new { htmlAttributes = new { @class = "form-control", placeholder = "Firmenname" } })
                    @Html.ValidationMessageFor(model => model.Firmenname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Organisationsform, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="fieldContainer">
                        <select class="form-control prefilled ng-untouched ng-pristine ng-valid">
                            <option value="">Bitte wählen...</option>
                            <option>Mensaverein</option>
                            <option>Caterer</option>                           
                            <option>Sonstiges:</option>
                        </select>
                        <div>
                            @Html.ValidationMessageFor(model => model.Organisationsform, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Vorname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Vorname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vorname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nachname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nachname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nachname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FunktionAnsprechpartner, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FunktionAnsprechpartner, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FunktionAnsprechpartner, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Straße, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Straße, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Straße, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Postleitzahl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Postleitzahl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Postleitzahl, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Ort, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ort, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ort, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Internetadresse, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Internetadresse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Internetadresse, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Lieferumkreis, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="fieldContainer">                    
                        <select class="form-control prefilled ng-untouched ng-pristine ng-valid">
                            <option value="">Bitte wählen...</option>
                            <option>Nur im eigenen Stadtgebiet</option>
                            <option>Bis 30 km</option>
                            <option>Bis 50 km</option>
                            <option>Bis 50 - 100 km</option>
                            <option>Deutschlandweit</option>
                            <option>Sonstiges:</option>
                        </select>
                        <div>
                            @Html.ValidationMessageFor(model => model.Lieferumkreis, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <input type="checkbox" aria-label="...">
                        </span>
                    </div>
                </div>
                <div class="col-md-7">
                    "Meine Daten dürfen bei Beratungsfragen von der Vernetzungsstelle Niedersachsen weitergegeben werden."
                </div>
                <div class="col-md-3"></div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <input type="checkbox" aria-label="...">
                        </span>
                    </div>
                </div>
                <div class="col-md-7">
                    "Ich akzeptiere die AGB."
                </div>
                <div class="col-md-3"></div>
            </div>
            <br />
            <br />
            
            




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Registrieren" class="btn btn-default" />
                </div>
            </div>
        </div>
    }



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

