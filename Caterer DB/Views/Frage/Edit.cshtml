
@model Caterer_DB.ViewModel.EditFrageViewModel

@{
    ViewBag.Title = "Edit";
}

<br />
<br />
<br />
<div class="row">
    <div id="CatererBearbeitenSeite" class="col-md-6 col-md-offset-3 text-center">
        <h1>Neue Frage bearbeiten</h1>
    </div>
</div>
<br />

@if (Model.IstVeröffentlicht)
{
    <div class="row">
        <div class="col-md-8 col-md-offset-2 text-center " id="istVeröffentlicht">
            <div class="well well-lg">
                <div class="text-center" role="alert"><H3>Frage ist bereits veröffentlicht und kann nicht mehr bearbeitet werden.</H3></div>
            </div>
        </div>
    </div>
}
else
{

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-8 col-md-offset-2">
                <div class="well well-lg">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.FrageId)

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.KategorieName, htmlAttributes: new { @class = "control-label " })
                                @Html.DropDownList("KategorieId", Model.Kategorien, new { @class = "form-control prefilled ng-untouched ng-pristine ng-valid" })
                                @Html.ValidationMessageFor(model => model.KategorieName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.IstMultiSelect, htmlAttributes: new { @class = "control-label " })
                                @Html.DropDownList("IstMultiSelect", Model.JaNein, new { @class = "form-control prefilled ng-untouched ng-pristine ng-valid" })
                                @Html.ValidationMessageFor(model => model.IstMultiSelect, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8 col-md-offset-2">
                <div class="well well-lg">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Bezeichnung, htmlAttributes: new { @class = "control-label col-md-0" })
                                @Html.EditorFor(model => model.Bezeichnung, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Bezeichnung, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4 col-md-offset-4">
                            <input type="submit" value="Antwort hinzufügen" name="btnAddAnswer" class="btn btn-default btn-block" />
                        </div>
                    </div>
                    <br />

                    @for (int i = 0; i < Model.Antworten.Count; i++)
                    {
                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-11">
                                    @Html.HiddenFor(Model => Model.Antworten[i].AntwortId)
                                    <label class="control-label col-md-0"> Antwort @(i + 1) </label>
                                    @Html.EditorFor(Model => Model.Antworten[i].Bezeichnung, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Antworten[i].Bezeichnung, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 text-right">
                                    <ul class="list-unstyled list-inline " style="margin-top: 27px;">
                                        <li>
                                            <button id="LöschenButtonAnswer" name="btnDeleteAnswer" title="Antwort löschen" type="submit" class="btn btn-success">
                                                <i class="glyphicon glyphicon-trash"></i>
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-2 col-md-offset-2">
                <button type="submit" id="btnSpeichern" name="btnSave" value="Speichern" class="btn btn-default btn-block">
                    <i class="glyphicon glyphicon-ok"></i> Speichern
                </button>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-default btn-block" id="btnVeroeffentlichen" name="btnVeroeffentlichen"><i class="glyphicon glyphicon-upload"></i> Veröffentlichen</button>
            </div>
            <div class="col-md-2">
                <a class="btn btn-default btn-block" id="btnZurück" href="@Url.Action("Index", "Frage", new {id = Model.FrageId})"><i class="glyphicon glyphicon-backward"></i> Zurück</a>
            </div>
            <div class="col-md-2">
                <button id="LöschenButton" type="button" class="btn btn-success btn-block" data-toggle="modal" data-target="#deleteModal">
                    <i class="glyphicon glyphicon-trash"></i> Frage löschen
                </button>
            </div>
        </div>


            <!-- Modal -->
            <div class="modal fade" id="deleteModal" role="dialog">
                <div class="modal-dialog modal-sm">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button id="LöschenCancel" type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 id="LöschenBest" class="modal-title">Löschen bestätigen</h4>
                        </div>
                        <div class="modal-body">
                            <p>Wollen Sie diese Frage wirklich löschen?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-success" id="btnModalDelete" name="btnModalDelete" value="Delete">Ja</button>
                            <button type="submit" class="btn btn-success" data-dismiss="modal" id="btnModalCancel" name="btnModalCancel" value="Cancel">Nein</button>
                        </div>
                    </div>
                </div>
            </div>
    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}