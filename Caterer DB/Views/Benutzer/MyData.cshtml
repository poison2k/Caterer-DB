@model Caterer_DB.Models.MyDataBenutzerViewModel

@{
    ViewBag.Title = "MyData";
}
<br />
<br />
<br />
<div class="row">
    <div class="col-md-4"></div>
    <div id="RegSeite" class="col-md-4 text-center">
        <h1>Eigene Daten</h1>
    </div>
    <div class="col-md-4"></div>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()




    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.BenutzerId)
    @Html.HiddenFor(model => model.Mail)
    @Html.HiddenFor(model => model.PasswortZeitstempel)
    @Html.HiddenFor(model => model.IstEmailVerifiziert)
    <div class="row">
        <div class="col-md-4"></div>
        <div class="col-md-4 text-center">
            <h3>@Html.ValidationSummary(true, "", new { @class = "text-danger", id = "VallidationSummary" })</h3>
        </div>
        <div class="col-md-4"></div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-10 col-md-offset-1">

            <div class="row">
                <div class="col-md-6">
                    <div class="well well-lg">

                        <h4><i class="glyphicon glyphicon-list "></i> Firma</h4>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Firmenname, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Firmenname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Firmenname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Organisationsform, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("Organisationsform", Model.Organisationsformen, new { @class = "form-control prefilled ng-untouched ng-pristine ng-valid" })
                                    @Html.ValidationMessageFor(model => model.Organisationsform, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Straße, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Straße, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Straße, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">

                                    @Html.LabelFor(model => model.Postleitzahl, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Postleitzahl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Postleitzahl, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Ort, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Ort, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Ort, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="well well-lg">
                        <h4><i class="glyphicon glyphicon-user "></i> Ansprechpartner</h4>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">

                                    @Html.LabelFor(model => model.Anrede, htmlAttributes: new { @class = "control-label " })
                                    @Html.DropDownList("Anrede", Model.Anreden, new { @class = "form-control prefilled ng-untouched ng-pristine ng-valid" })
                                    @Html.ValidationMessageFor(model => model.Anrede, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">

                                    @Html.LabelFor(model => model.Vorname, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Vorname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Vorname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">

                                    @Html.LabelFor(model => model.Nachname, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Nachname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Nachname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">

                                    @Html.LabelFor(model => model.FunktionAnsprechpartner, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.FunktionAnsprechpartner, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FunktionAnsprechpartner, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="well well-lg">
                        <h4><i class="glyphicon glyphicon-earphone"></i> Erreichbarkeit</h4>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label " }) (optional)
                                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Internetadresse, htmlAttributes: new { @class = "control-label " }) (optional)
                                    @Html.EditorFor(model => model.Internetadresse, new { htmlAttributes = new { @class = "form-control" } })
                                    @*@Html.ValidationMessageFor(model => model.Internetadresse, "", new { @class = "text-danger" })*@
                                </div>
                            </div>
                        </div>
                        <br />
                    </div>

                </div>

                <div class="col-md-6">
                    <div class="well well-lg">
                        <h4><i class="glyphicon glyphicon-road"></i> Sonstiges</h4>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Lieferumkreis, htmlAttributes: new { @class = "control-label " })
                                    @Html.DropDownList("Lieferumkreis", Model.Lieferumkreise, new { @class = "form-control prefilled ng-untouched ng-pristine ng-valid" })
                                    @Html.ValidationMessageFor(model => model.Lieferumkreis, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Sonstiges, htmlAttributes: new { @class = "control-label " })
                                    @Html.TextAreaFor(model => model.Sonstiges, new { rows = 6, columns = 40, @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Sonstiges, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="well well-lg">
                        <h4><i class="glyphicon glyphicon-lock"></i> Datenschutz</h4>
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        @Html.CheckBoxFor(model => model.WeitergabeVonDaten, new { @checked = "checked" })
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <p>"Meine Daten dürfen bei Beratungsfragen von der Vernetzungsstelle Niedersachsen weitergegeben werden."</p>
                                @Html.ValidationMessageFor(model => model.WeitergabeVonDaten, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <ul class="list-unstyled list-inline " style="margin-left: -5px;">
                        <li>
                            <button type="submit" id="btnSpeichern" name="btnSave" value="Speichern" class="btn btn-success">
                                <i class="glyphicon glyphicon-ok"></i> Speichern
                            </button>
                        </li>
                        @*Button "Zurück", rechts neben "Registrieren"*@
                        <li>
                            <a class="btn btn-default" href="/home/index"><i class="glyphicon glyphicon-backward"></i> Zurück</a>
                        </li>
                    </ul>
                </div>
                <div class="col-md-6">
                </div>
                <div class="col-md-2">
                    <ul class="list-unstyled list-inline " style="margin-right: 0px;">

                        <li>
                            <buttonc id="LöschenButton" type="button" class="btn btn-success" data-toggle="modal" data-target="#deleteModal">
                                <i class="glyphicon glyphicon-trash"></i> Konto löschen
                            </buttonc>

                            <!-- Modal -->
                            <div class="modal fade" id="deleteModal" role="dialog">
                                <div class="modal-dialog modal-sm">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button id="LöschenCancel" type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 id="LöschenBest" class="modal-title">Löschen bestätigen</h4>
                                        </div>
                                        <div class="modal-body">
                                            <p>Wollen Sie Ihren Account jetzt löschen?</p>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-success" id="btnModalDelete" name="btnModalDelete" value="Delete">Ja</button>
                                            <button type="submit" class="btn btn-success" data-dismiss="modal" id="btnModalCancel" name="btnModalCancel" value="Cancel">Nein</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

}


            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
