@using PagedList.Mvc
@using Caterer_DB.Models
@model FullFilterCatererViewModel

@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm(new { id = "CatererForm" }))
{
    @Html.HiddenFor(model => model.FilterId)
    @Html.HiddenFor(model => model.ResultListCaterer.ListViewId)
    <br />
    <br />
    <br />
    <div class="container">
        <div class="row">
            <div id="CatererSeite" class="col-md-4 col-md-offset-4 text-center">
                <h1>Caterer</h1>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-md-12">
                <div class="well well-lg-weiss" style="border-color: rgb(211, 211, 211);">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Name, new { @class = "control-label" })
                                @Html.Editor("name", new { htmlAttributes = new { @class = "form-control", id = "name" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.PLZ, new { @class = "control-label" })
                                @Html.Editor("plz", new { htmlAttributes = new { @class = "form-control", id = "plz" } })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Umkreis, htmlAttributes: new { @class = "control-label " })
                                    @Html.DropDownList("Umkreis", Model.Lieferumkreise, new { @class = "form-control prefilled ng-untouched ng-pristine ng-valid" })
                                    @Html.ValidationMessageFor(model => model.Umkreis, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />
                    @for (int i = 0; i < Model.FrageAntwortModel.Count; i++)
                    {

                        @Html.HiddenFor(model => model.FrageAntwortModel[i].FrageAntwortId)

                        var test = "FrageAntwortModel[" + i + "].FrageId";
                        var test2 = "FrageAntwortModel[" + i + "].AntwortId";
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Fragen, htmlAttributes: new { @class = "control-label " })
                                    @Html.DropDownList(test, Model.Fragen, new { id = "Fragen" + i, @class = "form-control prefilled ng-untouched ng-pristine ng-valid", onchange = "ladeAntworten(" + i + ")" })
                                    @Html.ValidationMessageFor(model => model.Fragen, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Antwort wählen</label>
                                    @Html.DropDownList(test2, new List<SelectListItem>(), new { id = "Antworten" + i, @class = "form-control prefilled ng-untouched ng-pristine ng-valid" })

                                </div>
                            </div>
                            @if (Model.FrageAntwortModel.Count - 1 == i)
                            {
                                <div class="col-md-2 text-right">
                                    <button id="btnAddFilter" name="btnAddFilter" class="btn btn-default" style="margin-top: 27px;" type="submit"><i class="glyphicon glyphicon-plus"></i></button>
                                    @if (Model.FrageAntwortModel.Count  == 1)
                                    {
                                        <button id="btnDeleteFilter" name="btnDeleteFilter" class="btn btn-default" style="margin-top: 27px;" type="submit" disabled><i class="glyphicon glyphicon-trash" ></i></button>
                                    }
                                    else
                                    {
                                        <button id="btnDeleteFilter" name="btnDeleteFilter" class="btn btn-default" style="margin-top: 27px;" type="submit"><i class="glyphicon glyphicon-trash"></i></button>
                                    }
                                </div>
                            }
                           
                        </div>
                    }
                    <br />
                    <div class="row">
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-default btn-block">Filter anwenden</button>
                        </div>
                        <div class="col-md-3">
                            <a href="/Benutzer/IndexCaterer" class="btn btn-default btn-block"> Filter zurücksetzen</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <ul class="list-unstyled list-inline col-md-12">
                        <li>
                            <a id="btnMarkierungenErstellen" href="@Url.Action("CreateCaterer", "Benutzer")"name="btnErstellen" type="submit" class="btn btn-default btn-block">
                                <i class="glyphicon glyphicon-plus"></i> Neuer Caterer
                            </a>
                        </li>
                        <li>
                            <button type="submit" class="btn btn-default btn-block" name="btnVergleich" id="btnVergleich"> <i class="glyphicon glyphicon-list"></i> Caterer vergleichen</button>
                        </li>
                    </ul>
                </div>
                <div style="margin-top: 15px"></div>
                <div class="row" id="BenutzerIndexPartial">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading"></div>
                            <table class="table table-striped">
                                <tr>
                                    <th>

                                    </th>
                                    <th>
                                        @if (ViewBag.Sortierrung == "Firmenname")
                                        {
                                            <button type="submit" name="Firmenname_desc" class="link-button"> @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Firmenname) <b class="caret"></b> </button>
                                        }
                                        else if (ViewBag.Sortierrung == "Firmenname_desc")
                                        {
                                            <button type="submit" name="Firmenname" class="link-button"> @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Firmenname) <b class="caret caret-reversed"></b> </button>
                                        }
                                        else
                                        {
                                            <button type="submit" name="Firmenname" class="link-button"> @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Firmenname)  </button>
                                        }
                                    </th>
                                    <th>
                                        @if (ViewBag.Sortierrung == "Telefon")
                                        {
                                            <button type="submit" name="Telefon_desc" class="link-button">
                                                @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Telefon) <b class="caret"></b>
                                            </button>
                                        }
                                        else if (ViewBag.Sortierrung == "Telefon_desc")
                                        {
                                            <button type="submit" name="Telefon" class="link-button">
                                                @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Telefon) <b class="caret caret-reversed"></b>
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="submit" name="Telefon" class="link-button">
                                                @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Telefon)
                                            </button>
                                        }
                                    </th>
                                    <th>
                                        @if (ViewBag.Sortierrung == "Postleitzahl")
                                        {
                                            <button type="submit" name="Postleitzahl_desc" class="link-button">@Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Postleitzahl) <b class="caret"></b> </button>
                                        }
                                        else if (ViewBag.Sortierrung == "Postleitzahl_desc")
                                        {
                                            <button type="submit" name="Postleitzahl" class="link-button"> @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Postleitzahl) <b class="caret caret-reversed"></b> </button>
                                        }
                                        else
                                        {
                                            <button type="submit" name="Postleitzahl" class="link-button"> @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Postleitzahl)  </button>
                                        }
                                    </th>
                                    <th>
                                        @if (ViewBag.Sortierrung == "Ort")
                                        {
                                            <button type="submit" name="Ort_desc" class="link-button">@Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Ort) <b class="caret"></b> </button>
                                        }
                                        else if (ViewBag.Sortierrung == "Ort_desc")
                                        {
                                            <button type="submit" name="Ort" class="link-button"> @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Ort) <b class="caret caret-reversed"></b> </button>
                                        }
                                        else
                                        {
                                            <button type="submit" name="Ort" class="link-button"> @Html.DisplayNameFor(model => model.ResultListCaterer.FirstOrDefault().Ort)  </button>
                                        }
                                    </th>

                                    <th></th>
                                </tr>

                                @for (int i = 0; i < Model.ResultListCaterer.Entitäten.Count; i++)
                                {
                                    @Html.HiddenFor(modelItem => Model.ResultListCaterer.Entitäten[i].BenutzerId)
                                    <tr>
                                        <td>@Html.CheckBoxFor(modelItem => Model.ResultListCaterer.Entitäten[i].selected, new {id = "Checkbox"+i , onchange="pruefeCheckboxen()"  })</td>
                                        <td>@Html.DisplayFor(modelItem => Model.ResultListCaterer.Entitäten[i].Firmenname)</td>
                                        <td>@Html.DisplayFor(modelItem => Model.ResultListCaterer.Entitäten[i].Telefon)</td>
                                        <td>@Html.DisplayFor(modelItem => Model.ResultListCaterer.Entitäten[i].Postleitzahl)</td>
                                        <td>@Html.DisplayFor(modelItem => Model.ResultListCaterer.Entitäten[i].Ort)</td>

                                        <td align="center">
                                            <a class="btn btn-default" href="@Url.Action("DetailsCaterer", "Benutzer", new {id = Model.ResultListCaterer.Entitäten[i].BenutzerId})" title="Details"><i class="glyphicon glyphicon-search"></i></a>
                                            <a class="btn btn-default" href="@Url.Action("EditCaterer", "Benutzer", new { id = Model.ResultListCaterer.Entitäten[i].BenutzerId })" title="Bearbeiten"><i class="glyphicon glyphicon-pencil"></i></a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>

                        @if (Model.ResultListCaterer.TotalItemCount > Model.ResultListCaterer.PageSize)
                        {
                            var seitenAnzahl = Model.ResultListCaterer.TotalItemCount / Model.ResultListCaterer.PageSize;
                            if (Model.ResultListCaterer.TotalItemCount % Model.ResultListCaterer.PageSize > 0)
                            {
                                seitenAnzahl++;
                            }
                            <input id="seitenAnzahl" type="hidden" value="@seitenAnzahl" />
                            <div controller="/Benutzer/GetListPartial/" target="BenutzerIndexPartial">
                                @Html.PagedListPager(Model.ResultListCaterer, aktuelleSeite => Url.Action("IndexCaterer", new { aktuelleSeite, Model.ResultListCaterer, Sortierrung = ViewBag.Sortierrung }))
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@section Scripts {

    
    @for (int i = 0; i < Model.FrageAntwortModel.Count; i++)
    {
        <script>
            pruefeCheckboxen();
            ladeAntwortenInitial(@i, @Model.FrageAntwortModel[i].FrageId, @Model.FrageAntwortModel[i].AntwortId)
        </script>
    }

}
